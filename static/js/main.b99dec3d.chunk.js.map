{"version":3,"sources":["components/header/Header.tsx","components/itemList/ItemRow.tsx","components/itemList/ItemList.tsx","hooks/useLocalStorage.tsx","utils/general.ts","components/filterManager/FilterHeader.tsx","components/filterManager/FilterManager.tsx","utils/constants.ts","services/APIService.ts","hooks/useAuth.tsx","pages/home/Home.tsx","pages/login/LoginPage.tsx","components/router/protectedRoute/ProtectedRoute.tsx","components/app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","user","logout","React","showMenu","setShowMenu","username","displayName","animationProps","useSpring","opacity","transform","config","duration","easing","easeQuadInOut","className","role","onKeyPress","e","key","onClick","tabIndex","style","backgroundImage","avatar","div","type","ItemRow","item","id","_id","wavesurferRef","playing","setPlaying","setPlayPosition","handleWSMount","waveSurfer","current","alert","audio","src","load","on","getCurrentTime","play","playPause","setVolume","volume","preventDefault","stopPropagation","bot","identifier","name","description","cost","Math","round","onMount","ref","container","p","cursorColor","waveColor","progressColor","height","barWidth","barHeight","cursorWidth","hideScrollbar","enabled","subscriberOnly","format","Date","createdAt","ItemList","items","sort","setSort","handleSort","order","map","i","useLocalStorage","initialValue","forceReset","manipulatedKey","adjustableKey","useState","window","localStorage","getItem","removeItem","JSON","parse","error","console","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","objectToQueryString","object","Object","keys","length","reduce","a","k","push","encodeURIComponent","join","FilterHeader","query","setQuery","minVolume","setMinVolume","maxVolume","setMaxVolume","minCost","setMinCost","maxCost","setMaxCost","placeholder","onChange","target","min","max","parseInt","FilterManager","children","undefined","processedItems","setProcessedItems","memoizedProcessFiltering","allItems","s","array","produce","draft","b","less","more","x","get","y","sortByKey","filter","toUpperCase","includes","sortKey","mapSingleKeyToPath","FiltersComponent","BASE_URL","fetchAPI","url","options","fetch","then","response","ok","Error","statusText","json","APIService","token","getCurrentUserChannel","method","headers","Authorization","getMeDetails","getChannelItems","channelId","limit","offset","AuthContext","createContext","AuthProvider","setUser","setToken","Provider","useAuth","useContext","Home","setItems","memoizedFetchUserDetails","useCallback","memoizedFetchChannelItems","useEffect","channel","channelItems","LoginPage","navigate","useNavigate","jwt","setJWT","onSubmit","pjson","version","ProtectedRoute","auth","location","useLocation","to","state","from","App","path","element","index","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b99dec3d.chunk.js","sourcesContent":["import * as React from 'react'\nimport { animated, useSpring } from 'react-spring'\nimport { easeQuadInOut } from 'd3-ease'\n\nimport { StreamElements } from '../../@types/types'\nimport './Header.scss'\n\ninterface IProps {\n  user?: StreamElements.Channel\n  logout: () => void\n}\n\nconst Header = ({ user, logout }: IProps) => {\n  const [showMenu, setShowMenu] = React.useState<boolean>(false)\n\n  const username = user?.displayName\n\n  const animationProps = useSpring({\n    opacity: showMenu ? 1 : 0,\n    transform: showMenu\n      ? 'translateY(0%) translateX(0%) scale(1)'\n      : 'translateY(-100%) translateX(50%) scale(0)',\n    config: { duration: 250, easing: easeQuadInOut }\n  })\n\n  return (\n    <div className=\"header-app\">\n      <div className=\"title\">\n        <h1>StreamElements Sounds editor</h1>\n      </div>\n      <div className=\"buttons\">\n        <div\n          className={`button-user${showMenu ? ' active' : ''}`}\n          role=\"button\"\n          onKeyPress={e => (e.key === 'enter' ? setShowMenu(!showMenu) : {})}\n          onClick={() => setShowMenu(!showMenu)}\n          tabIndex={0}\n        >\n          <div className=\"user-image\" style={{ backgroundImage: `url(${user?.avatar})` }} />\n          <div className=\"name\">{username || <i className=\"fas fa-spin fa-spinner\" />}</div>\n          <div className=\"triangle\">\n            <i className=\"fas fa-caret-down\" />\n          </div>\n        </div>\n      </div>\n      <animated.div className=\"user-menu\" style={{ ...animationProps }}>\n        <button className=\"button-menu danger\" type=\"button\" onClick={() => logout()}>\n          Log out\n        </button>\n      </animated.div>\n    </div>\n  )\n}\n\nexport default Header\n","import * as React from 'react'\nimport { WaveSurfer, WaveForm } from 'wavesurfer-react'\nimport { format } from 'date-fns'\n\nimport { StreamElements } from '../../@types/types'\n\ninterface IProps {\n  item: StreamElements.ChannelItem\n}\n\nconst ItemRow = ({ item }: IProps) => {\n  const id = `waveform-${item._id}`\n  const wavesurferRef = React.useRef<any>(null)\n\n  const [playing, setPlaying] = React.useState(false)\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [playPosition, setPlayPosition] = React.useState(0)\n  const handleWSMount = React.useCallback(\n    waveSurfer => {\n      wavesurferRef.current = waveSurfer\n\n      if (wavesurferRef.current && item.alert?.audio?.src) {\n        wavesurferRef.current.load(item.alert?.audio?.src)\n\n        wavesurferRef.current.on('play', () => {\n          setPlaying(true)\n        })\n\n        wavesurferRef.current.on('pause', () => {\n          setPlaying(false)\n        })\n\n        wavesurferRef.current.on('finish', () => {\n          setPlaying(false)\n        })\n\n        wavesurferRef.current.on('seek', () => {\n          setPlayPosition(wavesurferRef.current.getCurrentTime())\n        })\n\n        wavesurferRef.current.on('audioprocess', () => {\n          setPlayPosition(wavesurferRef.current.getCurrentTime())\n        })\n      }\n    },\n    [item.alert?.audio?.src]\n  )\n\n  const play = React.useCallback(() => {\n    wavesurferRef.current.playPause()\n  }, [])\n\n  React.useEffect(() => {\n    if (wavesurferRef.current) {\n      wavesurferRef.current.setVolume(item.alert?.audio?.volume)\n    }\n  }, [item.alert?.audio?.volume])\n\n  return (\n    <tr className=\"item\" key={item._id}>\n      <td className=\"checkbox\" />\n      <td className=\"play\">\n        <div\n          className=\"play-button\"\n          role=\"button\"\n          tabIndex={0}\n          onKeyPress={e => {\n            e.preventDefault()\n            e.stopPropagation()\n            if (e.key === 'ENTER') {\n              if (item.alert?.audio?.src && !playing) {\n                play()\n              }\n            }\n          }}\n          onClick={e => {\n            e.preventDefault()\n            e.stopPropagation()\n            if (item.alert?.audio?.src && !playing) {\n              play()\n            }\n          }}\n        >\n          <i className={playing ? 'fas fa-pause' : 'fas fa-play'} />\n        </div>\n      </td>\n      <td className=\"sound-name\">\n        <div className=\"name-split\">\n          <div className=\"name\">{item.bot?.identifier}</div>\n          <div className=\"description\">\n            {item.name} - {item.description}\n          </div>\n        </div>\n      </td>\n      <td className=\"cost center\">{item.cost}</td>\n      <td className=\"volume center\">{Math.round((item.alert?.audio?.volume || 0) * 100)}%</td>\n      <td className=\"waveform\">\n        <WaveSurfer onMount={handleWSMount} ref={wavesurferRef}>\n          <WaveForm\n            id={id}\n            container={id}\n            p\n            cursorColor=\"#ff000000\"\n            waveColor=\"#BDBABD\"\n            progressColor=\"#9a64ff\"\n            height={35}\n            barWidth={1}\n            barHeight={3}\n            cursorWidth={1}\n            hideScrollbar={true}\n          />\n        </WaveSurfer>\n      </td>\n      <td className=\"check center enabled\">\n        <i className={item.enabled ? 'fas fa-check' : 'fas fa-times'} />\n      </td>\n      <td className=\"check center subs-only\">\n        <i className={item.subscriberOnly ? 'fas fa-check' : 'fas fa-times'} />\n      </td>\n      <td className=\"dateCreated center\">\n        {format(new Date(item.createdAt), 'dd-MM-yyyy HH:mm:ss')}\n      </td>\n    </tr>\n  )\n\n  // async function playSound(soundFile: string, volume: number = 1.0) {\n  //   const sound = new Audio(soundFile)\n  //   sound.volume = volume\n  //   setPlaying(true)\n  //   try {\n  //     await sound.play()\n  //     const length = sound.duration\n  //     setTimeout(() => setPlaying(false), length * 1000)\n  //   } catch (error) {\n  //     console.error(error)\n  //   }\n  // }\n}\n\nexport default ItemRow\n","import * as React from 'react'\n\nimport ItemRow from './ItemRow'\n\nimport { StreamElements, TableSortType } from '../../@types/types'\nimport './ItemList.scss'\n\ninterface IProps {\n  items: StreamElements.ChannelItem[]\n  sort: { sort: TableSortType; order: 'asc' | 'desc' }\n  setSort: (sort: { sort: TableSortType; order: 'asc' | 'desc' }) => void\n}\n\nconst ItemList = ({ items, sort, setSort }: IProps) => {\n  return (\n    <table className=\"item-list\">\n      <thead>\n        <tr className=\"table-header\">\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <th className=\"checkbox\" />\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <th className=\"play\" />\n          <th className=\"sound-name clickable\" onClick={() => handleSort('soundName')}>\n            Sound name\n            <i\n              className={`fas fa-sort${\n                sort.sort === 'soundName' ? (sort.order === 'asc' ? '-up' : '-down') : ' unset'\n              }`}\n            />\n          </th>\n          <th className=\"cost center clickable\" onClick={() => handleSort('cost')}>\n            Cost\n            <i\n              className={`fas fa-sort${\n                sort.sort === 'cost' ? (sort.order === 'asc' ? '-up' : '-down') : ' unset'\n              }`}\n            />\n          </th>\n          <th className=\"volume center clickable\" onClick={() => handleSort('volume')}>\n            Volume\n            <i\n              className={`fas fa-sort${\n                sort.sort === 'volume' ? (sort.order === 'asc' ? '-up' : '-down') : ' unset'\n              }`}\n            />\n          </th>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <th className=\"waveform\" />\n          <th className=\"check center enabled clickable\" onClick={() => handleSort('enabled')}>\n            Enabled\n            <i\n              className={`fas fa-sort${\n                sort.sort === 'enabled' ? (sort.order === 'asc' ? '-up' : '-down') : ' unset'\n              }`}\n            />\n          </th>\n          <th className=\"check center subs-only clickable\" onClick={() => handleSort('subsOnly')}>\n            Subs only{' '}\n            <i\n              className={`fas fa-sort${\n                sort.sort === 'subsOnly' ? (sort.order === 'asc' ? '-up' : '-down') : ' unset'\n              }`}\n            />\n          </th>\n          <th className=\"age center clickable\" onClick={() => handleSort('dateCreated')}>\n            Date created\n            <i\n              className={`fas fa-sort${\n                sort.sort === 'dateCreated' ? (sort.order === 'asc' ? '-up' : '-down') : ' unset'\n              }`}\n            />\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {items.map(i => (\n          <ItemRow item={i} key={i._id} />\n        ))}\n      </tbody>\n    </table>\n  )\n\n  function handleSort(key: TableSortType) {\n    setSort({\n      sort: key,\n      order: sort.sort === key ? (sort.order === 'asc' ? 'desc' : 'asc') : 'asc'\n    })\n  }\n}\n\nexport default ItemList\n","import { Dispatch, SetStateAction, useState } from 'react'\n\nexport function useLocalStorage<T>(\n  key: string,\n  initialValue: T,\n  forceReset?: boolean\n): [T, Dispatch<SetStateAction<T>>] {\n  const manipulatedKey = (adjustableKey: string) => `onscreensounds-${adjustableKey}`\n  const [storedValue, setStoredValue] = useState<T>(() => {\n    try {\n      const item = window.localStorage.getItem(manipulatedKey(key))\n\n      if (forceReset) {\n        window.localStorage.removeItem(manipulatedKey(key))\n      }\n\n      return item && forceReset !== true ? JSON.parse(item) : initialValue\n    } catch (error) {\n      console.error(error)\n      return initialValue\n    }\n  })\n\n  const setValue = (value: T | SetStateAction<T>): void => {\n    try {\n      const valueToStore = value instanceof Function ? value(storedValue) : value\n      setStoredValue(valueToStore)\n      window.localStorage.setItem(manipulatedKey(key), JSON.stringify(valueToStore))\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  return [storedValue, setValue]\n}\n","import produce from 'immer'\nimport cloneDeep from 'lodash/cloneDeep'\nimport get from 'lodash/get'\n\nexport function sortByKey<T>(array: T[], key: string, order: 'asc' | 'desc' = 'asc'): T[] {\n  return produce(array, draft =>\n    draft.sort((a, b) => {\n      const less = order === 'asc' ? -1 : 1\n      const more = order === 'asc' ? 1 : -1\n      const x = get(a, key)\n      const y = get(b, key)\n\n      if (x && y) {\n        return x < y ? less : x > y ? more : 0\n      }\n      if (!x) {\n        return 1\n      }\n      return -1\n    })\n  )\n}\n\nexport function queryStringToObject(query: string): { [key: string]: string } {\n  let splitObject = cloneDeep(query)\n\n  // Remove ?\n  if (splitObject.charAt(0) === '?') {\n    splitObject = splitObject.slice(1)\n  }\n\n  // Create array by splitting on &\n  const splittedQuery = splitObject.split('&')\n  const keyValueObj: { [key: string]: string } = {}\n  // Make key value objects ( key=value -> {key: value} )\n  splittedQuery.forEach(queryParam => {\n    const keyValue = queryParam.split('=')\n    if (keyValue[1]) {\n      // eslint-disable-next-line prefer-destructuring\n      keyValueObj[keyValue[0]] = keyValue[1]\n    }\n  })\n\n  return keyValueObj\n}\n\nexport function objectToQueryString(object: {\n  [key: string]: string | number | boolean | undefined\n}): string {\n  if (Object.keys(object).length === 0) {\n    return ''\n  }\n\n  const str = `?${Object.keys(object)\n    .reduce((a: string[], k) => {\n      const value = object[k]\n      if (value || value === 0 || value === false) {\n        a.push(`${k}=${encodeURIComponent(value)}`)\n      }\n      return a\n    }, [])\n    .join('&')}`\n\n  return str\n}\n","import React from 'react'\n\nimport './FilterHeader.scss'\n\ninterface IProps {\n  query: string\n  setQuery: (query: string) => void\n  minVolume: number | undefined\n  setMinVolume: (minVolume: number | undefined) => void\n  maxVolume: number | undefined\n  setMaxVolume: (minVolume: number | undefined) => void\n  minCost: number | undefined\n  setMinCost: (minVolume: number | undefined) => void\n  maxCost: number | undefined\n  setMaxCost: (minVolume: number | undefined) => void\n}\n\nconst FilterHeader = ({\n  query,\n  setQuery,\n  minVolume,\n  setMinVolume,\n  maxVolume,\n  setMaxVolume,\n  minCost,\n  setMinCost,\n  maxCost,\n  setMaxCost\n}: IProps) => (\n  <div className=\"filter-header\">\n    <div className=\"filter-item\">\n      <h3>Search</h3>\n      <input\n        placeholder=\"Search by sound name\"\n        value={query}\n        onChange={e => setQuery(e.target.value)}\n      />\n    </div>\n    <div className=\"filter-item\">\n      <h3>Volume</h3>\n      <div className=\"flex\">\n        <input\n          className={(minVolume || 0) < (maxVolume || 0) ? 'warn' : ''}\n          type=\"number\"\n          value={minVolume}\n          placeholder=\"Min\"\n          min={0}\n          max={99}\n          onChange={e => setMinVolume(parseInt(e.target.value, 10))}\n        />\n        <input\n          className={(minVolume || 0) < (maxVolume || 0) ? 'warn' : ''}\n          type=\"number\"\n          value={maxVolume}\n          placeholder=\"Max\"\n          min={1}\n          max={100}\n          onChange={e => setMaxVolume(parseInt(e.target.value, 10))}\n        />\n      </div>\n    </div>\n    <div className=\"filter-item\">\n      <h3>Cost</h3>\n      <div className=\"flex\">\n        <input\n          className={(minCost || 0) < (maxCost || 0) ? 'warn' : ''}\n          type=\"number\"\n          value={minCost}\n          placeholder=\"Min\"\n          min={0}\n          max={9999999999}\n          onChange={e => setMinCost(parseInt(e.target.value, 10))}\n        />\n        <input\n          className={(minCost || 0) < (maxCost || 0) ? 'warn' : ''}\n          type=\"number\"\n          value={maxCost}\n          placeholder=\"Max\"\n          min={1}\n          max={1000000000}\n          onChange={e => setMaxCost(parseInt(e.target.value, 10))}\n        />\n      </div>\n    </div>\n  </div>\n)\n\nexport default FilterHeader\n","import * as React from 'react'\nimport { StreamElements, TableSortType } from '../../@types/types'\nimport { useLocalStorage } from '../../hooks/useLocalStorage'\nimport { sortByKey } from '../../utils/general'\nimport FilterHeader from './FilterHeader'\n\ninterface IProps {\n  items: StreamElements.ChannelItem[]\n  children: (\n    FiltersComponent: React.ReactNode,\n    processedItems: StreamElements.ChannelItem[],\n    sort: { sort: TableSortType; order: 'asc' | 'desc' },\n    setSort: (newSort: { sort: TableSortType; order: 'asc' | 'desc' }) => void\n  ) => React.ReactNode\n}\n\nconst FilterManager = ({ items, children }: IProps) => {\n  const [query, setQuery] = useLocalStorage<string>('query', '')\n  const [minVolume, setMinVolume] = useLocalStorage<number | undefined>('minVolume', undefined)\n  const [maxVolume, setMaxVolume] = useLocalStorage<number | undefined>('maxVolume', undefined)\n  const [minCost, setMinCost] = useLocalStorage<number | undefined>('minCost', undefined)\n  const [maxCost, setMaxCost] = useLocalStorage<number | undefined>('maxCost', undefined)\n  const [sort, setSort] = useLocalStorage<{ sort: TableSortType; order: 'asc' | 'desc' }>('sort', {\n    sort: 'dateCreated',\n    order: 'asc'\n  })\n\n  const [processedItems, setProcessedItems] = React.useState<StreamElements.ChannelItem[]>(items)\n  const memoizedProcessFiltering = React.useCallback(processFiltering, [\n    query,\n    minVolume,\n    maxVolume,\n    minCost,\n    maxCost\n  ])\n\n  React.useEffect(() => {\n    setProcessedItems(memoizedProcessFiltering(items, sort))\n  }, [items, memoizedProcessFiltering, sort])\n\n  const FiltersComponent = FilterHeader({\n    query,\n    setQuery,\n    minVolume,\n    setMinVolume,\n    maxVolume,\n    setMaxVolume,\n    minCost,\n    setMinCost,\n    maxCost,\n    setMaxCost\n  })\n\n  return <>{children(FiltersComponent, processedItems, sort, setSort)}</>\n\n  function processFiltering(\n    allItems: StreamElements.ChannelItem[],\n    s: { sort: TableSortType; order: 'asc' | 'desc' }\n  ) {\n    return sortByKey(\n      allItems.filter(\n        item =>\n          item.name.toUpperCase().includes(query.toUpperCase()) &&\n          (item.alert?.audio?.volume || 0) * 100 >= (minVolume || 0) &&\n          (item.alert?.audio?.volume || 0) * 100 <= (maxVolume || 100) &&\n          (item.cost || 0) >= (minCost || 0) &&\n          (item.cost || 0) <= (maxCost || 100000000)\n      ),\n      mapSingleKeyToPath(s.sort),\n      s.order\n    )\n  }\n\n  function mapSingleKeyToPath(sortKey: TableSortType): string {\n    switch (sortKey) {\n      case 'soundName':\n        return 'bot.identifier'\n      case 'volume':\n        return 'alert.audio.volume'\n      case 'dateCreated':\n        return 'createdAt'\n      default:\n        return sortKey\n    }\n  }\n}\n\nexport default FilterManager\n","export const BASE_URL = 'https://api.streamelements.com/kappa'\n","import { BASE_URL } from '../utils/constants'\nimport { objectToQueryString } from '../utils/general'\nimport { StreamElements } from '../@types/types'\n\nexport interface APIServiceProps {\n  getMeDetails: () => Promise<StreamElements.Channel>\n  getCurrentUserChannel: () => Promise<StreamElements.Channel>\n  getChannelItems: (channelId: string) => Promise<StreamElements.ChannelItem[]>\n}\n\nconst APIService = (token: string): APIServiceProps => ({\n  getCurrentUserChannel: (): Promise<StreamElements.Channel> => {\n    const options: RequestInit = {\n      method: 'GET',\n      headers: {\n        Authorization: token\n      }\n    }\n\n    return fetchAPI(`${BASE_URL}/v2/users/current`, options)\n  },\n  getMeDetails: (): Promise<StreamElements.Channel> => {\n    const options: RequestInit = {\n      method: 'GET',\n      headers: {\n        Authorization: token\n      }\n    }\n\n    return fetchAPI(`${BASE_URL}/v2/channels/me`, options)\n  },\n  getChannelItems: (\n    channelId: string,\n    limit: number = 25,\n    offset?: number\n  ): Promise<StreamElements.ChannelItem[]> => {\n    const options: RequestInit = {\n      method: 'GET',\n      headers: {\n        Authorization: token\n      }\n    }\n\n    const query = objectToQueryString({ limit, offset })\n\n    return fetchAPI(`${BASE_URL}/v2/store/${channelId}/items${query}`, options)\n  }\n})\n\nfunction fetchAPI<T>(url: string, options: RequestInit): Promise<T> {\n  return fetch(url, options).then(response => {\n    if (!response.ok) {\n      throw new Error(response.statusText)\n    }\n    return response.json()\n  })\n}\n\nexport default APIService\n","import React from 'react'\nimport APIService, { APIServiceProps } from '../services/APIService'\nimport { useLocalStorage } from './useLocalStorage'\nimport { StreamElements } from '../@types/types'\n\ninterface AuthContextType {\n  user?: StreamElements.Channel\n  setUser: (user: StreamElements.Channel) => void\n  token: string | null\n  setToken: (token: string | null) => void\n  APIService: APIServiceProps | null\n}\n\nconst AuthContext = React.createContext<AuthContextType>(null!)\n\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\n  const [user, setUser] = React.useState<StreamElements.Channel>()\n  const [token, setToken] = useLocalStorage<string | null>('StreamElementsJWT', null)\n\n  const tokenizedAPIService = token ? APIService(`Bearer ${token}`) : null\n\n  const value = { user, setUser, token, setToken, APIService: tokenizedAPIService }\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>\n}\n\nexport function useAuth() {\n  return React.useContext(AuthContext)\n}\n","import React, { useCallback, useEffect, useState } from 'react'\n\nimport Header from '../../components/header/Header'\nimport ItemList from '../../components/itemList/ItemList'\nimport FilterManager from '../../components/filterManager/FilterManager'\n\nimport { StreamElements } from '../../@types/types'\nimport { useAuth } from '../../hooks/useAuth'\n\nimport './Home.scss'\n\nconst Home = () => {\n  const { user, setUser, APIService, setToken } = useAuth()\n  const [items, setItems] = useState<StreamElements.ChannelItem[]>([])\n\n  const memoizedFetchUserDetails = useCallback(fetchUserDetails, [APIService, setUser])\n  const memoizedFetchChannelItems = useCallback(fetchUserStoreItems, [APIService])\n\n  useEffect(() => {\n    memoizedFetchUserDetails()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    if (user?._id) {\n      memoizedFetchChannelItems(user?._id)\n    } else {\n      setItems([])\n    }\n  }, [user?._id, memoizedFetchChannelItems])\n\n  return (\n    <div className=\"home\">\n      <Header user={user} logout={() => setToken(null)} />\n      <div className=\"content\">\n        <FilterManager items={items}>\n          {(FiltersComponent, processedItems, sort, setSort) => (\n            <>\n              {FiltersComponent}\n              <ItemList items={processedItems} sort={sort} setSort={setSort} />\n            </>\n          )}\n        </FilterManager>\n      </div>\n    </div>\n  )\n\n  async function fetchUserDetails() {\n    if (APIService) {\n      try {\n        const channel = await APIService?.getMeDetails()\n        setUser(channel)\n      } catch (error) {\n        console.error(error)\n      }\n    }\n  }\n\n  async function fetchUserStoreItems(channelId: string) {\n    if (APIService) {\n      try {\n        const channelItems = await APIService?.getChannelItems(channelId)\n        setItems(channelItems)\n      } catch (error) {\n        console.error(error)\n      }\n    }\n  }\n}\n\nexport default Home\n","import React, { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nimport pjson from '../../../package.json'\nimport { useAuth } from '../../hooks/useAuth'\n\nimport './LoginPage.scss'\n\nconst LoginPage = () => {\n  const { token, setToken } = useAuth()\n  const navigate = useNavigate()\n\n  const [jwt, setJWT] = useState<string>('')\n\n  useEffect(() => {\n    if (token) {\n      navigate('/')\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <div className=\"login-page\">\n      <h1 className=\"page-title\">StreamElements Sounds editor</h1>\n      <div className=\"login-block\">\n        <div className=\"info-box warning\">\n          <div className=\"header\">\n            <i className=\"fas fa-info-circle\" />\n            <span>Information</span>\n          </div>\n          <div className=\"content\">\n            <p>To manage sounds the tool needs your JWT (JSON web token).</p>\n            <p>\n              You can find this by logging into StreamElements, clicking your image in the top\n              right, then your username and lastly Channel Settings.\n            </p>\n            <p>\n              Then toggle the \"Show secrets\" button, and copy the JWT in full inside the input\n              field.\n            </p>\n          </div>\n          <div className=\"footer\">\n            <span>Do not share this token!</span>\n          </div>\n        </div>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"password\"\n            value={jwt}\n            onChange={e => setJWT(e.target.value)}\n            placeholder=\"JWT (JSON web token)\"\n          />\n          <button type=\"submit\">Login</button>\n        </form>\n      </div>\n      <div className=\"copy\">\n        <div className=\"who\">&copy; damon02 - 2021</div>\n        <div className=\"version\">v{pjson.version}</div>\n      </div>\n    </div>\n  )\n\n  function handleSubmit(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault()\n\n    setToken(jwt)\n    setJWT('')\n\n    navigate('/')\n  }\n}\n\nexport default LoginPage\n","import * as React from 'react'\nimport { useLocation, Navigate } from 'react-router-dom'\nimport { useAuth } from '../../../hooks/useAuth'\n\nconst ProtectedRoute = ({ children }: { children: JSX.Element }) => {\n  const auth = useAuth()\n  const location = useLocation()\n\n  if (!auth?.token) {\n    return <Navigate to=\"/login\" state={{ from: location }} />\n  }\n\n  return children\n}\n\nexport default ProtectedRoute\n","import * as React from 'react'\nimport { Routes, Route } from 'react-router-dom'\n\nimport Home from '../../pages/home/Home'\nimport LoginPage from '../../pages/login/LoginPage'\nimport ProtectedRoute from '../router/protectedRoute/ProtectedRoute'\n\nimport './App.scss'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes>\n        <Route\n          path=\"/\"\n          element={\n            <ProtectedRoute>\n              <Home />\n            </ProtectedRoute>\n          }\n        />\n        <Route index={false} path=\"login\" element={<LoginPage />} />\n      </Routes>\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './components/app/App'\nimport { AuthProvider } from './hooks/useAuth'\nimport reportWebVitals from './reportWebVitals'\n\nimport './style/index.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <AuthProvider>\n        <App />\n      </AuthProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}